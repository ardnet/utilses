{"version":3,"sources":["utils.js","src/components/localstorage/LS.js","src/utils.js"],"names":[],"mappings":"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","file":"utils.js","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  global.utils = factory()\n}(this, function () { 'use strict';\n\n  /*global window*/\n  /**\n   *\n   */\n\n  class LS {\n\n    constructor() {\n      this._ls = window.localStorage;\n      this._listening = false;\n      this._listeners = {};\n    }\n\n    set(key, val) {\n\n      if (val === undefined) {\n        return this.remove(key);\n      }\n\n      let oldValue = this.get(key);\n      this._ls.setItem(key, this._serialize(val));\n\n      setTimeout(this._change.call(this ,{\n        oldValue: oldValue,\n        newValue: val,\n        url: window.location,\n        key: key\n      }), 0);\n\n      return val;\n    }\n\n    get(key, defaultVal) {\n      setTimeout(this._change,0);\n      return this._deserialize(this._ls.getItem(key));\n    }\n\n    remove(key) {\n      this._ls.removeItem(key);\n    }\n\n    clear() {\n      this._ls.clear();\n    }\n\n    getAll() {\n      var ret = {};\n\n      this.forEach(function(key, val) {\n        ret[key] = val;\n      });\n\n      return ret;\n    }\n\n    forEach(callback) {\n      let key;\n\n      for (let i = 0; i < this._ls.length; i++) {\n        key = this._ls.key(i);\n        callback(key, this.get(key));\n      }\n    }\n\n    _listen() {\n      if (window.addEventListener) {document.addEventListener('storage', this._change.bind(this), false);}\n      if (window.attachEvent) {document.attachEvent('storage', this._change.bind(this), false);}\n      console.log('bind!');\n    }\n\n    _change(e) {\n      let fire = (listener) => {\n        listener(e.newValue, e.oldValue, e.url || e.uri);\n      };\n\n      if (this._listeners === undefined) {\n        return;\n      }\n\n      if (!e) {\n        e = window.event;\n      }\n\n      let all = this._listeners[e.key];\n\n      if (all) {\n        all.forEach(fire);\n      }\n    }\n\n    on(key, callback) {\n      if (this._listeners[key]) {\n        this._listeners[key].push(callback);\n        console.log(this._listeners);\n      } else {\n        this._listeners[key] = [callback];\n        console.log(this._listeners);\n      }\n\n      if (!this._listening) {\n        this._listen();\n        console.log('to wazne wykonalo sie');\n      }\n    }\n\n    off(key, callback) {\n      let ns = this._listeners[key];\n\n      if (ns.lenght > 1) {\n        ns.splice(ns.indexOf(fn), 1);\n      } else {\n        this._listeners[key] = [];\n      }\n\n    }\n\n    _serialize(value) {\n      return JSON.stringify(value);\n    }\n\n    _deserialize(value) {\n      if (typeof value !== 'string') {\n        return undefined;\n      }\n\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return value || undefined;\n      }\n    }\n  }\n\n  const utils = {\n    greet() {\n      return 'hello';\n    }\n  };\n\n  let utils___ls = new LS();\n\n  window._ls = utils___ls;\n\n  return utils;\n\n}));\n","/*global window*/\n/**\n *\n */\n\nclass LS {\n\n  constructor() {\n    this._ls = window.localStorage;\n    this._listening = false;\n    this._listeners = {};\n  }\n\n  set(key, val) {\n\n    if (val === undefined) {\n      return this.remove(key);\n    }\n\n    let oldValue = this.get(key);\n    this._ls.setItem(key, this._serialize(val));\n\n    setTimeout(this._change.call(this ,{\n      oldValue: oldValue,\n      newValue: val,\n      url: window.location,\n      key: key\n    }), 0);\n\n    return val;\n  }\n\n  get(key, defaultVal) {\n    setTimeout(this._change,0);\n    return this._deserialize(this._ls.getItem(key));\n  }\n\n  remove(key) {\n    this._ls.removeItem(key);\n  }\n\n  clear() {\n    this._ls.clear();\n  }\n\n  getAll() {\n    var ret = {};\n\n    this.forEach(function(key, val) {\n      ret[key] = val;\n    });\n\n    return ret;\n  }\n\n  forEach(callback) {\n    let key;\n\n    for (let i = 0; i < this._ls.length; i++) {\n      key = this._ls.key(i);\n      callback(key, this.get(key));\n    }\n  }\n\n  _listen() {\n    if (window.addEventListener) {document.addEventListener('storage', this._change.bind(this), false);}\n    if (window.attachEvent) {document.attachEvent('storage', this._change.bind(this), false);}\n    console.log('bind!');\n  }\n\n  _change(e) {\n    let fire = (listener) => {\n      listener(e.newValue, e.oldValue, e.url || e.uri);\n    };\n\n    if (this._listeners === undefined) {\n      return;\n    }\n\n    if (!e) {\n      e = window.event;\n    }\n\n    let all = this._listeners[e.key];\n\n    if (all) {\n      all.forEach(fire);\n    }\n  }\n\n  on(key, callback) {\n    if (this._listeners[key]) {\n      this._listeners[key].push(callback);\n      console.log(this._listeners);\n    } else {\n      this._listeners[key] = [callback];\n      console.log(this._listeners);\n    }\n\n    if (!this._listening) {\n      this._listen();\n      console.log('to wazne wykonalo sie');\n    }\n  }\n\n  off(key, callback) {\n    let ns = this._listeners[key];\n\n    if (ns.lenght > 1) {\n      ns.splice(ns.indexOf(fn), 1);\n    } else {\n      this._listeners[key] = [];\n    }\n\n  }\n\n  _serialize(value) {\n    return JSON.stringify(value);\n  }\n\n  _deserialize(value) {\n    if (typeof value !== 'string') {\n      return undefined;\n    }\n\n    try {\n      return JSON.parse(value);\n    } catch (e) {\n      return value || undefined;\n    }\n  }\n}\n\nexport {LS};\n","import {LS} from './components/localstorage/LS.js';\n\nconst utils = {\n  greet() {\n    return 'hello';\n  }\n};\n\nlet _ls = new LS();\n\nwindow._ls = _ls;\n\nexport default utils;\n\n"],"sourceRoot":"/source/"}